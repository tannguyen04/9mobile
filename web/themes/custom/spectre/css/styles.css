/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, img, ins, kbd, q, s, samp,
small, strike, sub, sup, tt, var,
u, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

em, strong, b, i {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }


.container {
  max-width: 100%;
  margin-left: 0.625rem;
  margin-right: 0.625rem; }
  
  .container:after {
    content: " ";
    display: block;
    clear: both; }
  @media (min-width: 48em) {
    
    .container {
      max-width: 100%;
      margin-left: 1.25rem;
      margin-right: 1.25rem; }
      
      .container:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 64em) {
    
    .container {
      max-width: 100%;
      margin-left: 4.0625rem;
      margin-right: 4.0625rem; }
      
      .container:after {
        content: " ";
        display: block;
        clear: both; } }
  @media (min-width: 80em) {
    
    .container {
      max-width: 68.75rem;
      margin-left: auto;
      margin-right: auto; }
      
      .container:after {
        content: " ";
        display: block;
        clear: both; } }

.link--arrow {
  font-size: .875em;
  position: relative;
  display: block;
  font-family: "Frutiger-Roman", sans-serif;
  padding-left: 1.25rem;
  margin-bottom: 0.5rem; }
  .link--arrow:before {
    position: absolute;
    left: 0;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    font-size: 0.75rem;
    border: 0.0625rem solid #419eda;
    border-radius: 50%;
    background-color: #419eda;
    color: #fff; }
  .link--arrow__cicle-blig {
    font-size: .875rem;
    padding-left: 1.75rem; }
    .link--arrow__cicle-blig:before {
      font-size: 0.75rem; }
    @media screen and (min-width: 35.5em) and (max-width: 47.9375em) {
      .link--arrow__cicle-blig {
        font-size: 1.3125rem; }
        .link--arrow__cicle-blig:before {
          font-size: 1rem; } }
    @media (min-width: 48em) {
      .link--arrow__cicle-blig {
        font-size: 1.5625rem; }
        .link--arrow__cicle-blig:before {
          font-size: 1.125rem; } }

.bg--secondary {
  background-color: #032b5a; }

.bg--primary {
  background-color: #419eda;
  color: #fff; }

.bg-light--gray {
  background-color: #efefef;
  color: #032b5a; }

.bg-dark--black {
  background-color: #000000;
  color: #fff; }
  .bg-dark--black a {
    color: #fff; }
    .bg-dark--black a:hover {
      color: #fff; }

.text--center {
  text-align: center; }

.text--left {
  text-align: left; }

.text--right {
  text-align: right; }

.position--left {
  float: left; }

.position--right {
  float: right; }

.position--center {
  margin: 0 auto;
  text-align: center; }

*, *:before, *:after {
  box-sizing: border-box; }

html, body {
  height: 100%; }

html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

body {
  font-family: 'MarkWebPro', serif;
  font-weight: 400;
  color: #ccc; }
  body.no-scroll {
    position: fixed;
    overflow: hidden; }

img {
  max-width: 100%;
  height: auto;
  display: block; }

::-moz-selection {
  color: white; }

::selection {
  color: white; }

::-moz-selection {
  color: white; }

a, a:visited {
  text-decoration: none;
  outline: none; }

pre, code {
  font-family: "Consolas", monospace;
  display: block;
  background: black;
  color: white;
  padding: 20px 30px;
  overflow-x: scroll; }

.video-wrap {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  clear: both;
  margin: 0 auto; }
  .video-wrap iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }

form {
  background: #fff;
  padding: 20px; }

input, textarea {
  width: 100%;
  height: 40px;
  padding: 0 15px;
  font-family: 'MarkWebPro', serif;
  font-size: 100%;
  font-weight: 400;
  outline: none;
  border: none; }

textarea {
  padding: 15px;
  resize: none; }

select {
  height: 40px;
  padding: 0 15px; }

button, a.button, .form-submit {
  height: 40px;
  font-family: 'MarkWebProMedium', serif;
  font-size: 70%;
  display: inline-block;
  color: white;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 0 20px;
  white-space: nowrap;
  width: auto; }
  button:hover, a.button:hover, .form-submit:hover {
    color: white; }

a.button {
  line-height: 40px; }

.overlay-blue {
  position: relative;
  color: white; }
  .overlay-blue:after {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    content: '';
    background-color: rgba(17, 33, 70, 0.75);
    top: 0;
    left: 0;
    z-index: 1;
    opacity: 0.95; }
    .lighter .overlay-blue:after {
      opacity: 0.5; }
  .overlay-blue * {
    z-index: 2;
    position: relative; }

.section {
  margin: 20px 0; }

@font-face {
  font-family: "phones";
  src: url("../fonts/phones.eot?") format("eot"), url("../fonts/phones.woff2") format("woff2"), url("../fonts/phones.woff") format("woff"), url("../fonts/phones.ttf") format("truetype"), url('../fonts/phones.svg#str-replace(phones, " ", "_")') format("svg"); }

@font-face {
  font-family: "FrutigerLight";
  src: url("../fonts/Frutiger-LightRegular.eot?") format("eot"), url("../fonts/Frutiger-LightRegular.woff2") format("woff2"), url("../fonts/Frutiger-LightRegular.woff") format("woff"), url("../fonts/Frutiger-LightRegular.ttf") format("truetype"), url('../fonts/Frutiger-LightRegular.svg#str-replace(FrutigerLight, " ", "_")') format("svg"); }

@font-face {
  font-family: "FrutigerLightItalic";
  src: url("../fonts/Frutiger-LightItalic.eot?") format("eot"), url("../fonts/Frutiger-LightItalic.woff2") format("woff2"), url("../fonts/Frutiger-LightItalic.woff") format("woff"), url("../fonts/Frutiger-LightItalic.ttf") format("truetype"), url('../fonts/Frutiger-LightItalic.svg#str-replace(FrutigerLightItalic, " ", "_")') format("svg"); }

@font-face {
  font-family: "FrutigerRoman";
  src: url("../fonts/Frutiger-Roman.eot?") format("eot"), url("../fonts/Frutiger-Roman.woff2") format("woff2"), url("../fonts/Frutiger-Roman.woff") format("woff"), url("../fonts/Frutiger-Roman.ttf") format("truetype"), url('../fonts/Frutiger-Roman.svg#str-replace(FrutigerRoman, " ", "_")') format("svg"); }

h1,
h2,
h3,
h4,
h5 {
  font-family: "Frutiger-Roman", sans-serif;
  margin-bottom: 0.625rem; }

h1 {
  font-size: 1.875em;
  line-height: 1em; }
  @media (min-width: 768px) {
    h1 {
      font-size: 2.875em; } }

h2 {
  font-size: 2rem;
  line-height: 1em; }

h3 {
  font-size: 1.75rem;
  line-height: 1.25em; }

h4 {
  font-size: 1.25em; }

a {
  color: #419eda;
  text-decoration: none; }
  a:active, a:hover {
    color: #419eda; }

.link--arrow:before, [class^='icon-']:before,
[class*=' icon-']:before, .carousel .slick-arrow:before {
  font-family: 'phones';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-chevron-thin-left:before, .carousel .slick--prev:before {
  content: "\e90b"; }

.icon-chevron-thin-right:before, .carousel .slick--next:before {
  content: "\e90a"; }

.icon-cheveron-right:before, .link--arrow:before {
  content: "\e904"; }

.icon-chevron-down:before {
  content: "\e900"; }

.icon-plus:before {
  content: "\e901"; }

.icon-triangle-down:before {
  content: "\e902"; }

.icon-arrow-down:before {
  content: "\e903"; }

.icon-play:before {
  content: "\e905"; }

.icon-instagram:before {
  content: "\e906"; }

.icon-twitter:before {
  content: "\e907"; }

.icon-facebook:before {
  content: "\e908"; }

.icon-facebook-f:before {
  content: "\e908"; }

.icon-magnifying-glass:before {
  content: "\e909"; }

.icon-search:before {
  content: "\e909"; }

.icon-glass:before {
  content: "\e909"; }

.icon-magnifier:before {
  content: "\e909"; }

.icon-lookup:before {
  content: "\e909"; }

.btn, button,
input[type='submit'] {
  background: #fff;
  color: white;
  display: inline-block;
  font-weight: bold;
  letter-spacing: 1px;
  padding: 11px 60px;
  text-align: center;
  text-transform: uppercase;
  transition: all 0.3s ease;
  font-size: 14px; }
  .btn:active, button:active,
  input[type='submit']:active, .btn:hover, button:hover,
  input[type='submit']:hover {
    background: #CBCBCB;
    border-bottom-right-radius: 20px;
    color: black; }
  .btn--primary {
    font-size: 10px;
    letter-spacing: 0;
    padding: 13px 20px;
    text-transform: capitalize;
    background: #419eda; }
    .btn--primary:active, .btn--primary:hover {
      background: #032b5a;
      color: #fff;
      border-bottom-right-radius: 0; }

button,
input[type='submit'] {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none; }

/* Slider */
.slick-slider {
  position: relative;
  display: block;
  box-sizing: border-box;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  -webkit-tap-highlight-color: transparent; }

.slick-list {
  position: relative;
  overflow: hidden;
  display: block;
  margin: 0;
  padding: 0; }
  .slick-list:focus {
    outline: none; }
  .slick-list.dragging {
    cursor: pointer;
    cursor: hand; }

.slick-slider .slick-track,
.slick-slider .slick-list {
  -webkit-transform: translate3d(0, 0, 0);
  -ms-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slick-track {
  position: relative;
  left: 0;
  top: 0;
  display: block;
  margin-left: auto;
  margin-right: auto; }
  .slick-track:before, .slick-track:after {
    content: "";
    display: table; }
  .slick-track:after {
    clear: both; }
  .slick-loading .slick-track {
    visibility: hidden; }

.slick-slide {
  float: left;
  height: 100%;
  min-height: 1px;
  display: none; }
  [dir="rtl"] .slick-slide {
    float: right; }
  .slick-slide img {
    display: block; }
  .slick-slide.slick-loading img {
    display: none; }
  .slick-slide.dragging img {
    pointer-events: none; }
  .slick-initialized .slick-slide {
    display: block; }
  .slick-loading .slick-slide {
    visibility: hidden; }
  .slick-vertical .slick-slide {
    display: block;
    height: auto;
    border: 1px solid transparent; }

.slick-arrow.slick-hidden {
  display: none; }

.carousel {
  position: relative; }
  .carousel__item {
    height: 15rem;
    overflow: hidden;
    position: relative; }
    @media (min-width: 35.5em) {
      .carousel__item {
        height: 25rem; } }
  .carousel__media img {
    bottom: auto;
    height: 100%;
    left: 50%;
    max-width: inherit;
    position: absolute;
    right: auto;
    top: 50%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    width: 100%;
    -o-object-position: 100% 50%;
       object-position: 100% 50%;
    -o-object-fit: cover;
       object-fit: cover; }
    @media (min-width: 35.5em) {
      .carousel__media img {
        width: auto; } }
  .carousel__content {
    -webkit-align-content: flex-start;
        -ms-flex-line-pack: start;
            align-content: flex-start;
    -webkit-align-items: stretch;
        -ms-flex-align: stretch;
            align-items: stretch;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-flow: column wrap;
        -ms-flex-flow: column wrap;
            flex-flow: column wrap;
    height: 100%;
    -webkit-justify-content: center;
        -ms-flex-pack: center;
            justify-content: center;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 2; }
  .carousel__grid {
    width: 50%; }
  @media screen and (max-width: 35.4375em) {
    .carousel__inner {
      margin-bottom: 45px; } }
  .carousel__caption {
    width: 100%; }
    @media screen and (max-width: 35.4375em) {
      .carousel__caption {
        padding-bottom: 30px; } }
  .carousel__link a:hover {
    text-decoration: underline; }
  .carousel__title {
    font-family: "Frutiger Light Regular", sans-serif;
    font-size: 1.375rem;
    margin-bottom: 8px; }
    @media (min-width: 48em) {
      .carousel__title {
        font-size: 1.875rem; } }
    @media (min-width: 64em) {
      .carousel__title {
        font-size: 2.875rem;
        margin-bottom: 0; } }
  .carousel__description {
    line-height: 17px;
    margin-bottom: 25px;
    font-size: .75rem; }
    @media screen and (min-width: 35.5em) and (max-width: 47.9375em) {
      .carousel__description {
        font-size: .875rem;
        line-height: 20px; } }
  .carousel .slick-dots {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 10px;
    text-align: center;
    z-index: 4;
    width: 80%;
    margin: 0 auto; }
    @media (min-width: 35.5em) {
      .carousel .slick-dots {
        width: 100%;
        bottom: -2px; } }
    .carousel .slick-dots li {
      display: inline-block;
      text-align: center;
      overflow: hidden;
      background-color: #fff;
      margin: 0 2px;
      cursor: pointer; }
      @media screen and (max-width: 35.4375em) {
        .carousel .slick-dots li {
          border: 1px solid transparent;
          width: 10px;
          height: 10px;
          border-radius: 50%;
          text-indent: -999em; }
          .carousel .slick-dots li.slick-active {
            background-color: #419eda;
            border-color: #fff; } }
      @media (min-width: 35.5em) {
        .carousel .slick-dots li {
          margin: 0 5px;
          height: 32px;
          transition: height 0.5s ease; }
          .carousel .slick-dots li .inProgress {
            height: 2px;
            background-color: transparent; }
          .carousel .slick-dots li.slick-active {
            height: 54px; }
            .carousel .slick-dots li.slick-active .inProgress {
              background: rgba(0, 0, 0, 0.5); }
            .carousel .slick-dots li.slick-active .thumb-title {
              display: none; }
          .carousel .slick-dots li .thumb-title {
            font-size: 10px;
            width: 90px;
            padding: 0 5px;
            background: #fff;
            white-space: nowrap;
            overflow: hidden;
            display: block;
            height: 19px;
            line-height: 19px;
            font-family: "Frutiger-Roman", sans-serif;
            text-overflow: ellipsis; }
          .carousel .slick-dots li img {
            margin: 0 auto; } }
  .carousel .slick-arrow {
    position: absolute;
    bottom: 0;
    z-index: 2;
    text-indent: -999em;
    width: 100%;
    height: 2.4375rem;
    cursor: pointer;
    background-color: rgba(0, 0, 0, 0.5); }
    @media (min-width: 35.5em) {
      .carousel .slick-arrow {
        width: 2.4375rem;
        top: 50%;
        -webkit-transform: translateY(-50%);
            -ms-transform: translateY(-50%);
                transform: translateY(-50%); } }
    .carousel .slick-arrow:before {
      text-indent: 0;
      position: absolute;
      color: #fff;
      top: 50%;
      -webkit-transform: translateY(-50%);
          -ms-transform: translateY(-50%);
              transform: translateY(-50%);
      text-align: center;
      font-size: 18px;
      width: 39px; }
  .carousel .slick--next {
    right: 0; }
    @media (min-width: 64em) {
      .carousel .slick--next {
        right: 8%; } }
    .carousel .slick--next:before {
      right: 0; }
  .carousel .slick--prev {
    left: 0; }
    @media (min-width: 64em) {
      .carousel .slick--prev {
        left: 8%; } }
    .carousel .slick--prev:before {
      left: 0; }
  @media screen and (max-width: 35.4375em) {
    .carousel .position--right {
      float: left; } }
  @media (min-width: 35.5em) {
    .carousel .position--right {
      padding-right: 50px; } }
  @media (min-width: 64em) {
    .carousel .position--right {
      padding-right: 100px;
      padding-left: 50px; } }

.page-heading {
  height: 3.75rem;
  overflow: hidden;
  position: relative; }
  @media (min-width: 48em) {
    .page-heading {
      height: 8.125rem; } }
  .page-heading__image img {
    bottom: auto;
    height: 100%;
    max-width: inherit;
    position: absolute;
    right: auto;
    top: 50%;
    -webkit-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
            transform: translateY(-50%);
    width: 100%;
    -o-object-position: 100% 50%;
       object-position: 100% 50%;
    -o-object-fit: cover;
       object-fit: cover; }
  .page-heading__content {
    -webkit-align-content: stretch;
        -ms-flex-line-pack: stretch;
            align-content: stretch;
    -webkit-align-items: stretch;
        -ms-flex-align: stretch;
            align-items: stretch;
    bottom: 0;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-flow: column wrap;
        -ms-flex-flow: column wrap;
            flex-flow: column wrap;
    -webkit-justify-content: center;
        -ms-flex-pack: center;
            justify-content: center;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 2;
    color: #fff; }
    @media screen and (max-width: 47.9375em) {
      .page-heading__content {
        padding: 0rem 0.625rem; } }
  @media screen and (max-width: 47.9375em) {
    .page-heading .page-title {
      font-size: 1.5em; } }
  .page-heading__description {
    font-family: "FrutigerLightItalic", sans-serif;
    font-size: 1.125em; }
    @media screen and (max-width: 47.9375em) {
      .page-heading__description {
        display: none; } }

@-o-viewport {
  zoom: 1;
  width: extend-to-zoom; }

@viewport {
  zoom: 1;
  width: extend-to-zoom; }

@-ms-viewport {
  width: extend-to-zoom;
  zoom: 1; }

html {
  font-family: "Frutiger Light Regular", sans-serif;
  font-size: 16px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  font-smoothing: antialiased;
  line-height: 30px;
  height: 100%; }

body {
  -webkit-tap-highlight-color: transparent;
  color: #032b5a;
  font-size: 0.875rem;
  -webkit-text-size-adjust: none;
      -ms-text-size-adjust: none;
          text-size-adjust: none;
  word-wrap: break-word;
  height: 100%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
