// Susy grid.
$debug: false; // Set true to show the grid.
$show-image: 'hide';

@if $debug == false {
  $show-image: 'hide';
} @else {
  $show-image: 'show';
}

// Grid definition for all breakpoints. Use http://gridcalculator.dk/#/1200/12/52/20 to generate the grid.
$susy: (
  flow: ltr,
  math: fluid,
  container-position: rem($container-margin),
  container: auto,
  columns: $column-mobile,
  gutters: 15px / 44px,
  column-width: false,
  debug: (
    image: $show-image,
    color: rgba($black, .25),
    output: background,
    toggle: top right,
  )
);

$susy-tablet: (
  container-position: rem($container-margin * 4),
  container: auto,
  columns: $column-tablet,
  gutters: 38px / 59px,
  column-width: false,
  debug: (
    image: $show-image,
    color: rgba($gray, .25),
    output: background,
    toggle: top right,
  ),
);

$susy-desktop: (
  columns: $column-desktop,
  gutters: 36px / 62px,
  container-position: auto,
  container: rem($container-desktop),
  debug: (
    image: $show-image,
    color: rgba($silver, .25),
    output: background,
    toggle: top right,
  ),
);

// Pick specific breakpoint.
$susy-media: (
  // max-width: 769px
  mobileOnly: (
    media: screen,
    max-width: em($tablet - 1) * 1em,
  ),

  // max-width: 1999px
  mobileTabletOnly: (
    media: screen,
    max-width: em($desktop - 1) * 1em,
  ),

  // min-width: 480px
  mobileLandscape: em($mobile-landscape) * 1em,

  // min-width: 768px and max-width: 1999px
  tabletOnly: (
    media: screen,
    min-width: em($tablet) * 1em,
    max-width: em($desktop - 1) * 1em,
  ),

  // min-width: 768px
  tablet: em($tablet) * 1em,

  // min-width: 1999px
  desktop: em($desktop) * 1em,

  // min-width: 1999px
  desktop-wide: em($desktop-wide) * 1em,
);

%container,
.container {
  @include container();

  @include susy-media(tablet) {
    @include container($susy-tablet);
  }

  @include susy-media(desktop) {
    @include container($susy-desktop);
    padding: 0 20px;
  }
}

.content-inner {
  @extend %container;
}

// Reset container
.layout-full {
  .container {
    max-width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
}

.grid__item {
  @include susy-media(tablet) {
    padding: 10px;
  }
  padding-bottom: 10px;
}

.grid {
  &
  &--3column {
    .grid {
      &__item {
        @include susy-media(tablet) {
          //padding: 0;
        }
      }
    }
  }

  &--6column {
    .grid {
      &__item {
        padding: 10px;
        width: 50%;
        float: left;
      }
    }
  }
}

@for $i from 1 through 6 {

  .grid--#{$i}column {

    .paragraph__content {
      @include susy-media(tablet) {
        display: flex;
        align-items: stretch;
        flex-wrap:wrap;


        .grid__item {
          display: flex;

          > div {
            //min-height: 100%;
            width: 100%;
          }
        }
      }
    }

    .grid__item {
      @include susy-media(tablet) {
        width: 100%/$i;
      }
    }
  }
}

.grid--nopading {
  .grid__item {
    padding: 0 !important;
  }
}
